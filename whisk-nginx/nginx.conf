events {
    worker_connections  4096;
}

http {
    client_max_body_size 50M;

    rewrite_log on;
    log_format combined-upstream '$remote_addr - $remote_user [$time_local] '
        '$request $status $body_bytes_sent '
        '$http_referer $http_user_agent $upstream_addr';
    access_log /logs/nginx_access.log combined-upstream;

    upstream controllers {
        # These addresses are for the controller. If there are more
        # than two invoker instances deployed then you will need to
        # add additional controller addresses.

        server controller-0.controller:8080 fail_timeout=60s;
        server controller-1.controller:8080 backup;
    }

    server {
        listen 8080 default;

        # match namespace, note while OpenWhisk allows a richer character set for a
        # namespace, not all those characters are permitted in the (sub)domain name;
        # if namespace does not match, no vanity URL rewriting takes place.
        server_name ~^(?<namespace>[0-9a-zA-Z-]+)\.localhost$;

        # proxy to the web action path
        location / {
            if ($namespace) {
              rewrite    /(.*) /api/v1/web/${namespace}/$1 break;
            }
            proxy_pass http://controllers;
            proxy_read_timeout 70s; # 60+10 additional seconds to allow controller to terminate request
        }

        # proxy to 'public/html' web action by convention
        location = / {
            if ($namespace) {
              rewrite    ^ /api/v1/web/${namespace}/public/index.html break;
            }
            proxy_pass http://controllers;
            proxy_read_timeout 70s; # 60+10 additional seconds to allow controller to terminate request
        }

        location /blackbox-0.1.0.tar.gz {
            root /etc/nginx;
        }

        location /OpenWhiskIOSStarterApp.zip {
            return 301 https://github.com/openwhisk/openwhisk-client-swift/releases/download/0.2.3/starterapp-0.2.3.zip;
        }

        location /cli/go/download {
            autoindex on;
            root /etc/nginx;
        }
    }
}
